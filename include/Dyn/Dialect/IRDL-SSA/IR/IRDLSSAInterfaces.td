//===- IRDLInterfaces.td - IRDL Attributes -----------------*- tablegen -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the interfaces IRDL-SSA uses.
//
//===----------------------------------------------------------------------===//

#ifndef DYN_DIALECT_IRDL_SSA_IR_IRDLSSAINTERFACES
#define DYN_DIALECT_IRDL_SSA_IR_IRDLSSAINTERFACES

include "mlir/IR/OpBase.td"

def VerifyConstraintInterface : OpInterface<"VerifyConstraintInterface"> {
  let cppNamespace = "::mlir::irdlssa";

  let description = [{
    Represents the verification logic of the constraints generated by an operation.
  }];

  let methods = [
    InterfaceMethod<
      "Obtains an instance of a constraint verifier for the associated operation.",
      "llvm::Optional<std::unique_ptr<::mlir::irdlssa::TypeConstraint>>", "getVerifier",
      (ins "mlir::SmallVector<Value> const&":$valueRes)
    >
  ];
}

def AbstractOperationInterface : OpInterface<"AbstractOperationInterface"> {
  let cppNamespace = "::mlir::irdlssa";

  let description = [{
    Represents the abstract interpretation function of an operation.
  }];

  let methods = [
    InterfaceMethod<
      "Computes the output domain of the instruction given the domain of its input.",
      "mlir::irdlssa::ConstraintDomain", "abstract",
      (ins "mlir::ArrayRef<mlir::irdlssa::ConstraintDomain> const&":$domains)
    >
  ];
}

#endif // DYN_DIALECT_IRDL_SSA_IR_IRDLSSAINTERFACES
