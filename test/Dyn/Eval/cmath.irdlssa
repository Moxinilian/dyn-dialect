// RUN: dyn-opt %s | dyn-opt | FileCheck %s

// CHECK: module {
module {
  // CHECK-LABEL: irdlssa.dialect cmath {
  irdlssa.dialect cmath {
    irdlssa.type complex {
      %0 = irdlssa.is_type : f32
      %1 = irdlssa.is_type : f64
      %2 = irdlssa.any_of(%0, %1)
      irdlssa.parameters(%2)

      irdleval.verifier {
      ^bb0(%arg0: !irdleval.type):
        %3 = irdleval.alloca
        %4 = irdleval.alloca
        %5 = irdleval.alloca
        irdleval.assign(%5, %arg0)
        irdleval.check_type(%arg0, f32, ^bb1, ^bb2)
      ^bb1:  // 2 preds: ^bb0, ^bb2
        irdleval.success
      ^bb2:  // pred: ^bb0
        irdleval.check_type(%arg0, f64, ^bb1, ^bb3)
      ^bb3:  // pred: ^bb2
        irdleval.clear(%5)
        irdleval.failure
      }
    }

    irdlssa.operation norm {
      %0 = irdlssa.any_type
      %1 = irdlssa.parametric_type : "cmath.complex"<%0>
      irdlssa.operands(%1)
      irdlssa.results(%0)

      irdleval.verifier {
      ^bb0(%arg0: !irdleval.type, %arg1: !irdleval.type):
        %2 = irdleval.alloca
        %3 = irdleval.alloca
        irdleval.check_parametric(%arg0, "cmath.complex", ^bb4, ^bb3)
      ^bb1:  // pred: ^bb4
        irdleval.success
      ^bb2:  // 2 preds: ^bb3, ^bb5
        irdleval.failure
      ^bb3:  // pred: ^bb0
        cf.br ^bb2
      ^bb4(%4: !irdleval.type):  // pred: ^bb0
        irdleval.assign(%3, %arg0)
        irdleval.assign(%2, %4)
        irdleval.match_type(%2, %arg1, ^bb1, ^bb5)
      ^bb5:  // pred: ^bb4
        irdleval.clear(%3)
        irdleval.clear(%2)
        cf.br ^bb2
      }
    }
    
    irdlssa.operation mul {
      %0 = irdlssa.is_type : f32
      %1 = irdlssa.is_type : f64
      %2 = irdlssa.any_of(%0, %1)
      %3 = irdlssa.parametric_type : "cmath.complex"<%2>
      irdlssa.operands(%3, %3)
      irdlssa.results(%3)

      irdleval.verifier {
      ^bb0(%arg0: !irdleval.type, %arg1: !irdleval.type, %arg2: !irdleval.type):
        %4 = irdleval.alloca
        %5 = irdleval.alloca
        %6 = irdleval.alloca
        %7 = irdleval.alloca
        irdleval.check_parametric(%arg0, "cmath.complex", ^bb6, ^bb5)
      ^bb1:  // 2 preds: ^bb4, ^bb7
        irdleval.success
      ^bb2:  // 2 preds: ^bb5, ^bb10
        irdleval.failure
      ^bb3:  // pred: ^bb6
        irdleval.match_type(%7, %arg1, ^bb4, ^bb9)
      ^bb4:  // pred: ^bb3
        irdleval.match_type(%7, %arg2, ^bb1, ^bb9)
      ^bb5:  // pred: ^bb0
        cf.br ^bb2
      ^bb6(%8: !irdleval.type):  // pred: ^bb0
        irdleval.assign(%7, %arg0)
        irdleval.assign(%6, %8)
        irdleval.check_type(%8, f32, ^bb3, ^bb9)
      ^bb7:  // pred: ^bb8
        irdleval.match_type(%7, %arg2, ^bb1, ^bb10)
      ^bb8:  // pred: ^bb9
        irdleval.match_type(%7, %arg1, ^bb7, ^bb10)
      ^bb9:  // 3 preds: ^bb3, ^bb4, ^bb6
        irdleval.check_type(%8, f64, ^bb8, ^bb10)
      ^bb10:  // 3 preds: ^bb7, ^bb8, ^bb9
        irdleval.clear(%7)
        irdleval.clear(%6)
        cf.br ^bb2
      }
    }
  }
}
